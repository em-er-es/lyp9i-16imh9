#!/bin/bash

[ ${UID} -ne 0 ] && { echo Run as root/sudo; exit 1; }

function write_i2c() {
	i2cset -f -y "${BUS}" "${ADDRESS}" ${@}
}

lyp9i-16imh9-speaker-configuration() {
	BUS=${1}
	echo "Using I2C bus: ${BUS}"
	local ADDRESSES=(0x3f 0x38)
	local VALUES=("0x00 0x00" "0x7f 0x00" "0x01 0x01" "0x0e 0xc4" "0x0f 0x40" "0x5c 0xd9" "0x60 0x10" "0x0a 0x1e" "0x0a 0x2e" "0x0d 0x01" "0x16 0x40" "0x00 0x01" "0x17 0xc8" "0x00 0x04" "0x30 0x00" "0x31 0x00" "0x32 0x00" "0x33 0x01" "0x00 0x08" "0x18 0x00" "0x19 0x00" "0x1a 0x00" "0x1b 0x00" "0x28 0x40" "0x29 0x00" "0x2a 0x00" "0x2b 0x00" "0x00 0x0a" "0x48 0x00" "0x49 0x00" "0x4a 0x00" "0x4b 0x00" "0x58 0x40" "0x59 0x00" "0x5a 0x00" "0x5b 0x00" "0x00 0x00" "0x02 0x00")
	local CHANNEL=0

	for ADDRESS in "${ADDRESSES[@]}"; do # Iterate over addresses
		for VALUE in "${VALUES[@]}"; do # Iterate over value pairs
			if [ "${VALUE}" = "0x0a 0x1e" ] && [ $((CHANNEL % 2)) -eq 0 ]; then
				write_i2c ${VALUE}
			elif [ "${VALUE}" = "0x0a 0x2e" ] && [ $((CHANNEL % 2)) -eq 1 ]; then
				write_i2c ${VALUE}
			fi
			write_i2c ${VALUE}
		done

		CHANNEL=$((CHANNEL + 1))
	done && echo Speaker configuration complete
}

lyp9i-16imh9-speaker-configuration ${1:-2}
